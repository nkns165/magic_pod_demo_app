name: iOS starter workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set Default Scheme
        env:
          MAGICPOD_PROJECT: ${{ secrets.MAGICPOD_PROJECT }}
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
          echo "MAGICPOD_PROJECT=${MAGICPOD_PROJECT}"
      - name: Build
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
        run: |
          # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          if [ $scheme = default ]; then scheme=$(cat default); fi
          if [ "`ls -A | grep -i \\.xcworkspace\$`" ]; then filetype_parameter="workspace" && file_to_build="`ls -A | grep -i \\.xcworkspace\$`"; else filetype_parameter="project" && file_to_build="`ls -A | grep -i \\.xcodeproj\$`"; fi
          file_to_build=`echo $file_to_build | awk '{$1=$1;print}'`
          xcodebuild build-for-testing -scheme "$scheme" -"$filetype_parameter" "$file_to_build" -destination "platform=$platform,name=$device"
      - name: Upload to MagicPod
        env:
          scheme: ${{ 'default' }}
          platform: ${{ 'iOS Simulator' }}
          MAGICPOD_API_TOKEN: ${{ secrets.MAGICPOD_API_TOKEN }}
          MAGICPOD_ORGANIZATION: ${{ secrets.MAGICPOD_ORGANIZATION }}
          MAGICPOD_PROJECT: ${{ secrets.MAGICPOD_PROJECT }}
        run: |
          app_path=`find /Users/runner/Library/Developer/Xcode/DerivedData/ -name "magic_pod_demo_app.app"`
          echo $app_path
          curl -OL https://github.com/Magic-Pod/magicpod-api-client/releases/download/0.99.8.1/mac64_magicpod-api-client.zip
          unzip mac64_magicpod-api-client.zip
          file_no=`./magicpod-api-client upload-app -a $app_path`
          echo $file_no

          
          
